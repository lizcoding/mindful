MINDFUL --

App that helps you become more mindful about purchases
Tracks aspects of purchases: Satisfaction, return window, price
Checks in with user with periodic prompts, forms, etc.
If user decides to return an item (or sell, donate, gift the item if outside return window) help them plan for their next step!
Pages of the web app would include: Login, Dashboard (displays a collection of purchases being tracked with Mindful), individual product pages that can be navigated to from the dashboard (shows more data about item), To-Do page that lists game-plan for go-back items, profile page that shows the user Mindful's impact on their purchasing behaviors and data on their 'hits' and 'misses'

Possible APIs for: Text reminders, maps to view return locations, web-scraping retailer data, etc.
Google Maps: View return locations
Beautiful Soup: web-scraping retailer data
D3: Data visualization to show the user Mindful's impact, track 'progression' towards being more mindful about purchases. Provide data visualization in user profile: Saves sizes within brands, this brand runs big/small on you. Which brands have been 'hits' vs 'misses'. 
IBM Watson: Conduct sentiment analysis on user-submitted mindfulness check-ins

More ideas:
Offer backup option if return isn't made for unwanted item. Selling, donating, or gifting the item is still a win!
Allow user to accumulate some type of "Mindfulness" points for visualization based on app usage. Celebrate their achievements w/ badges or level system.
Add track delivery page (extra feature)
Serve weekly, monthly, bi-annual, annual reports


Project Planning Toolkit --
https://fellowship.hackbrightacademy.com/materials/resources/project-toolkit-march-2017.pdf

Project Requirements Checklist --
These are the minimum requirements for a successful Hackbright project.

Use git to track project files
It should also have a .gitignore and a readme.md
Have a public GitHub repository
Remember to pin your project repo to your GitHub profile and add the URL to your resume
Use virtualenv to install and keep track of dependencies
Remember to add requirements.txt to your git repo
A complete project should have at least:

A SQL database with at least one table
One SQLAlchemy class used to query the database
A Flask server
1-2 Jinja templates that use template inheritance
One CSS file
Bootstrap counts as one CSS file
One feature that uses JavaScript to manipulate the DOM
This includes JavaScript frontend libraries, frameworks, and/or code that you write
One AJAX request